<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Category Theory on Demystify FP</title>
    <link>https://www.demystifyfp.com/tags/category-theory/</link>
    <description>Recent content in Category Theory on Demystify FP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Demystify FP</copyright>
    <lastBuildDate>Mon, 12 Feb 2018 19:23:36 +0530</lastBuildDate>
    
	<atom:link href="https://www.demystifyfp.com/tags/category-theory/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Adding Meaning to Primitive Types in fsharp</title>
      <link>https://www.demystifyfp.com/fsharp/blog/adding-meaning-to-primitive-types-in-fsharp/</link>
      <pubDate>Mon, 12 Feb 2018 19:23:36 +0530</pubDate>
      
      <guid>https://www.demystifyfp.com/fsharp/blog/adding-meaning-to-primitive-types-in-fsharp/</guid>
      <description>One of the recommended guidelines in Domain Driven Design is modelling the domain ideas using the domain type (CustomerName, CustomerId) instead of using their corresponding primitive type (string, int). In fsharp, with the help of Single-Case Discriminated Union, we can follow this guideline with minimal effort.
While following this practice in one of my recent project in fsharp, I came across a compelling use case, and I used a lesser-known approach to solve the problem.</description>
    </item>
    
  </channel>
</rss>