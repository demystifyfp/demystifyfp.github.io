<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Generics on Demystify FP</title>
    <link>https://www.demystifyfp.com/tags/generics/</link>
    <description>Recent content in Generics on Demystify FP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Demystify FP</copyright>
    <lastBuildDate>Fri, 15 Dec 2017 19:39:26 +0530</lastBuildDate>
    
	<atom:link href="https://www.demystifyfp.com/tags/generics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Generic Programming Made Easy</title>
      <link>https://www.demystifyfp.com/fsharp/blog/generic-programming-made-easy/</link>
      <pubDate>Fri, 15 Dec 2017 19:39:26 +0530</pubDate>
      
      <guid>https://www.demystifyfp.com/fsharp/blog/generic-programming-made-easy/</guid>
      <description>Generic programming is a style of computer programming in which algorithms are written in terms of types to-be-specified-later that are then instantiated when needed for specific types provided as parameters1.
Generic programming was part of .NET since .NET Version 2.0 and has a fascinating history as well!
For most of the use cases which involves generics, implementing them in F# is a cake-walk. However, when the generic programming requires reflection, it becomes a bumpy ride.</description>
    </item>
    
  </channel>
</rss>