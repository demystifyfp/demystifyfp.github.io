<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Open Source on Demystify FP</title>
    <link>https://www.demystifyfp.com/tags/open-source/</link>
    <description>Recent content in Open Source on Demystify FP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Demystify FP</copyright>
    <lastBuildDate>Tue, 06 Feb 2018 19:48:26 +0530</lastBuildDate>
    
	<atom:link href="https://www.demystifyfp.com/tags/open-source/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introducing FsConfig</title>
      <link>https://www.demystifyfp.com/fsharp/blog/introducing-fsconfig/</link>
      <pubDate>Tue, 06 Feb 2018 19:48:26 +0530</pubDate>
      
      <guid>https://www.demystifyfp.com/fsharp/blog/introducing-fsconfig/</guid>
      <description>I am delighted to introduce a new F# library, FsConfig. FsConfig is a F# library for reading configuration data from environment variables and AppSettings with type safety
Why FsConfig? To understand FsConfig, let&amp;rsquo;s have a look at an use case from the FsTweet application.
The FsTweet application follows The Twelve-Factor App guideline for managing the configuration data. During the application bootstrap, it retrieves its ten configuration parameters from their respective environment variables.</description>
    </item>
    
  </channel>
</rss>