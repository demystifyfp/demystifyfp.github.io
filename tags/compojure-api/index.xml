<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Compojure Api on Demystify FP</title>
    <link>https://www.demystifyfp.com/tags/compojure-api/</link>
    <description>Recent content in Compojure Api on Demystify FP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Demystify FP</copyright>
    <lastBuildDate>Thu, 18 Oct 2018 01:17:17 +0530</lastBuildDate>
    
	<atom:link href="https://www.demystifyfp.com/tags/compojure-api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>RESTful CRUD APIs Using Compojure-API and Toucan (Part-2)</title>
      <link>https://www.demystifyfp.com/clojure/blog/restful-crud-apis-using-compojure-api-and-toucan-part-2/</link>
      <pubDate>Thu, 18 Oct 2018 01:17:17 +0530</pubDate>
      
      <guid>https://www.demystifyfp.com/clojure/blog/restful-crud-apis-using-compojure-api-and-toucan-part-2/</guid>
      <description>Hi,
In the last blog post, we learned how to implement RESTful APIs using Compojure-API &amp;amp; Toucan. We are going to generalise that example by creating a little abstraction around it.
The abstraction that we are going to create is going to help us in creating similar RESTful endpoints for any domain entities with less code.
Let&#39;s dive in!
The Book Entity To abstract what we did there, we need a few more specific implementation.</description>
    </item>
    
    <item>
      <title>RESTful CRUD APIs Using Compojure-API and Toucan (Part-1)</title>
      <link>https://www.demystifyfp.com/clojure/blog/restful-crud-apis-using-compojure-api-and-toucan-part-1/</link>
      <pubDate>Fri, 12 Oct 2018 19:39:17 +0530</pubDate>
      
      <guid>https://www.demystifyfp.com/clojure/blog/restful-crud-apis-using-compojure-api-and-toucan-part-1/</guid>
      <description>Hi,
In my last blog post on our experiences in using Clojure in production, I mentioned that we used Compojure API and Toucan to implement CRUD APIs. The abstraction that we created using these libraries helped us to create HTTP CRUD APIs for any domain entity in a matter of minutes. In this small blog-post series, I am going to share how we did it.
This first part is going to focus on developing a RESTful CRUD APIs for a specific domain entity.</description>
    </item>
    
  </channel>
</rss>